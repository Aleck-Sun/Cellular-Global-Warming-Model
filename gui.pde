/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:883403:
  appc.background(230);
} //_CODE_:window1:883403:

public void iceSliderChanged(GCustomSlider source, GEvent event) { //_CODE_:iceSlider:513726:
  iceMelt = iceSlider.getValueF();
} //_CODE_:iceSlider:513726:

public void pauseButtonClicked(GButton source, GEvent event) { //_CODE_:pauseButton:474731:
  pause = !pause;
} //_CODE_:pauseButton:474731:

public void resetClicked(GButton source, GEvent event) { //_CODE_:reset:448623:
  pause = !pause;
  reset();
  pause = !pause;
} //_CODE_:reset:448623:

public void nSliderClicked(GCustomSlider source, GEvent event) { //_CODE_:nSlider:746676:
  pause = !pause;
  n = nSlider.getValueI();
  reset();
  pause = !pause;
} //_CODE_:nSlider:746676:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Window title", 0, 0, 240, 200, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  iceSlider = new GCustomSlider(window1, 5, 28, 230, 30, "grey_blue");
  iceSlider.setLimits(0.1, 0.0, 1.0);
  iceSlider.setNbrTicks(10);
  iceSlider.setStickToTicks(true);
  iceSlider.setNumberFormat(G4P.DECIMAL, 0);
  iceSlider.setOpaque(false);
  iceSlider.addEventHandler(this, "iceSliderChanged");
  label1 = new GLabel(window1, -15, 5, 158, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Ice Melt Probability");
  label1.setOpaque(false);
  pauseButton = new GButton(window1, 6, 163, 227, 30);
  pauseButton.setText("Pause");
  pauseButton.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  pauseButton.addEventHandler(this, "pauseButtonClicked");
  reset = new GButton(window1, 6, 128, 226, 30);
  reset.setText("Reset");
  reset.setLocalColorScheme(GCScheme.RED_SCHEME);
  reset.addEventHandler(this, "resetClicked");
  label2 = new GLabel(window1, 11, 62, 80, 20);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Cell Grid Size");
  label2.setOpaque(false);
  nSlider = new GCustomSlider(window1, 5, 89, 230, 33, "grey_blue");
  nSlider.setLimits(150, 0, 1000);
  nSlider.setNbrTicks(20);
  nSlider.setNumberFormat(G4P.INTEGER, 0);
  nSlider.setOpaque(false);
  nSlider.addEventHandler(this, "nSliderClicked");
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GCustomSlider iceSlider; 
GLabel label1; 
GButton pauseButton; 
GButton reset; 
GLabel label2; 
GCustomSlider nSlider; 
